# This is a basic workflow to help you get started with Actions

name: Release Bundle

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      bundle_key:
        description: 'Bundle Name'
        required: true
        default: "default"
      test_release:
        description: 'Publish to test repo'
        required: false
        default: "false"

env:
  DIST_TARGET_DIR: "D:/Builds/Bundler/${{ github.run_number }}"
  GH_USERNAME: "nodos-bot"
  GH_TOKEN: ${{ secrets.CI_TOKEN }}
  GIT_EMAIL: "bot@nodos.dev"

# TODO: Support parallel runs
concurrency:
  group: ${{ github.ref_name }} # For now, allow 1 run at a time for each branch
  cancel-in-progress: false # Queue up runs if one is already in progress.

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  set-build-number:
    name: Set Build Number
    runs-on: self-hosted
    outputs:
      build_number: ${{ steps.offset-build-number.outputs.build_number }}
    steps:
      - name: Offset Build Number
        id: offset-build-number
        shell: bash
        run: |
          BUILD_NUMBER=$(( ${{ github.run_number }} + 3527 ))
          echo "build_number=$BUILD_NUMBER" >> $GITHUB_OUTPUT
  checkout:
    name: Checkout
    runs-on: self-hosted
    steps:
      - name: Update Git Credentials
        continue-on-error: true
        shell: bash
        run: |
          git credential-manager github login --username ${{ env.GH_USERNAME }} --token ${{ env.GH_TOKEN }} --force

      - name: Setup Work Folder
        shell: pwsh
        run: |
          if (-not (Test-Path -Path ./bunlder)) { New-Item -Path ./bunlder -ItemType Directory -Force }
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          repository: nodos-dev/bundler
          ref: ${{ github.ref }}
          token: ${{ env.GH_TOKEN }}
          path: ./bundler/bundler-${{ github.ref_name }}

  package-bundle:
    name: Download and Package Bundle
    runs-on: self-hosted
    needs: set-build-number
    env:
        BUILD_NUMBER: ${{ needs.set-build-number.outputs.build_number }}
    steps:
      - name: Download Nodos
        id: create_installer
        run: |
          python ./dist.py --bundle-key="${{ github.event.inputs.bundle_key}}" --bundles-json="./bundles.json" --download-nodos
        working-directory: ./bundler/bundler-${{ github.ref_name }}/
      - name: Download Modules
        id: download_modules
        run: |
          python ./dist.py --bundle-key="${{ github.event.inputs.bundle_key}}" --bundles-json="./bundles.json" --download-modules
        working-directory: ./bundler/bundler-${{ github.ref_name }}/
      - name: Create Package
        id: create_package
        run: |
          python ./dist.py --bundle-key="${{ github.event.inputs.bundle_key}}" --bundles-json="./bundles.json" --pack
        working-directory: ./bundler/bundler-${{ github.ref_name }}/
  deploy-dist-machine:
    name: "Deploy (Distribution Machine)"
    runs-on: self-hosted
    needs: package-bundle
    steps:
      - name: Copy Bundle to Distribution Machine
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path "${{ env.DIST_TARGET_DIR }}"
          copy ./Artifacts/Nodos-*.zip ${{ env.DIST_TARGET_DIR }}
        working-directory: ./bundler/bundler-${{ github.ref_name }}/

  deploy_github:
    name: "Deploy (GitHub: nodos)"
    runs-on: self-hosted
    needs: package-bundle
    steps:
      - name: Create Release
        id: release_nos_main_repo
        shell: pwsh
        run: |
          python ./dist.py --bundle-key="${{ github.event.inputs.bundle_key}}" --bundles-json="./bundles.json" --gh-release  --gh-release-repo="https://github.com/nodos-dev/bundler" --gh-release-notes="Release notes" --gh-release-title-postfix=" (${{ github.ref_name }})" --gh-release-target-branch="${{ github.ref_name }}" 
        working-directory: ./bundler/bundler-${{ github.ref_name }}/